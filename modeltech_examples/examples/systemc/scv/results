# do run.do 
# 
# Model Technology ModelSim SE sccom <VERSION> compiler <DATE>
# 
# Exported modules:
# 	sc_main
# 	sctop
# 
# Model Technology ModelSim SE sccom <VERSION> compiler <DATE>
# vsim sctop 
# Loading work/_sc/linux_gcc-4.1.2/systemc.so
# Loading work.sctop
# TEST SIMPLE CONSTRAINT USE MODEL ON SIMPLE INTEGER TYPE
# Test basic constraint creation 
# Generate 10 set of 3 values 
# Should be [1-100]  [100-200] [200-300] 
# 21  134  210
# 28  113  201
# 75  171  253
# 16  117  208
# 98  135  258
# 33  135  200
# 6  180  214
# 12  162  279
# 82  106  273
# 80  169  211
# Generate 10 set of 2 values 
# Should be [1000-9999]  [1000-9999] && val1 > val2
# 5353  4632
# 8337  2845
# 7876  2954
# 7320  6920
# 7019  3142
# 9549  7266
# 7760  4468
# 7158  6594
# 2238  1465
# 3728  1669
# Check generating value from smart_ptr assigned a constrained smart_ptr
# Set of 10 values [1,99]
# 5
# 10
# 40
# 9
# 15
# 62
# 5
# 66
# 78
# 34
# Set of 10 values [100,200]
# 194
# 192
# 160
# 111
# 115
# 138
# 165
# 152
# 158
# 156
# Set of 10 values [200,300]
# 288
# 236
# 239
# 250
# 237
# 285
# 220
# 225
# 235
# 292
# Test use_constraint use model
# Set of 10 values between [1,99]
# 70
# 50
# 64
# 47
# 99
# 63
# 97
# 63
# 42
# 51
# Set of 10 values between [1000, 9999] 
# 9258
# 4935
# 8411
# 2869
# 7190
# 2328
# 4829
# 1881
# 7529
# 7082
# 26  107
# 26  265
# 21  161
# 24  260
# 27  202
# 24  248
# 19
# 29
# 35
# 46
# 56
# Test parameterized constraint class
# Should print set of 10 values in the order 2 followed by 1
# 2
# 1
# 
# 2
# 1
# 
# 2
# 1
# 
# 2
# 1
# 
# 2
# 1
# 
# 2
# 1
# 
# 2
# 1
# 
# 2
# 1
# 
# 2
# 1
# 
# 2
# 1
# 
# Test generation of random values without constraint
# Should print 10 random values
# 1693359657
# 403664050
# 1475353723
# -1204883173
# 1741180381
# 1547214379
# -146734771
# 88326938
# -514719934
# -662884043
# Check scv_bag distribution mechanism
# Print set of 1000 values from [10|20|30|40]
# 20
# 10
# 10
# 40
# 40
# 40
# 40
# 40
# 20
# 20
# 40
# 20
# 40
# 40
# 30
# 30
# 30
# 20
# 20
# 30
# 10
# 40
# 20
# 40
# 30
# 30
# 20
# 20
# 20
# 20
# 10
# 40
# 10
# 30
# 30
# 40
# 20
# 30
# 10
# 20
# 30
# 40
# 20
# 30
# 10
# 20
# 10
# 30
# 40
# 40
# 30
# 30
# 40
# 30
# 10
# 40
# 10
# 10
# 10
# 30
# 10
# 10
# 20
# 30
# 20
# 20
# 40
# 30
# 30
# 10
# 30
# 30
# 30
# 40
# 10
# 40
# 20
# 10
# 40
# 20
# 10
# 10
# 20
# 40
# 30
# 10
# 20
# 10
# 30
# 10
# 40
# 10
# 10
# 30
# 30
# 40
# 30
# 10
# 20
# 20
# 10
# 10
# 10
# 30
# 10
# 10
# 20
# 10
# 20
# 40
# 20
# 20
# 10
# 30
# 30
# 30
# 10
# 20
# 10
# 10
# 30
# 10
# 10
# 10
# 20
# 10
# 10
# 10
# 20
# 20
# 40
# 30
# 20
# 10
# 10
# 40
# 20
# 10
# 10
# 20
# 40
# 40
# 30
# 30
# 20
# 40
# 40
# 40
# 20
# 10
# 30
# 10
# 10
# 10
# 10
# 10
# 40
# 30
# 30
# 20
# 10
# 20
# 10
# 20
# 30
# 40
# 20
# 10
# 20
# 10
# 20
# 30
# 40
# 40
# 30
# 10
# 20
# 40
# 30
# 40
# 10
# 30
# 30
# 40
# 30
# 20
# 20
# 20
# 30
# 40
# 40
# 10
# 10
# 20
# 10
# 40
# 20
# 10
# 30
# 40
# 40
# 20
# 40
# 20
# 10
# 10
# 30
# 10
# 30
# 10
# 20
# 30
# 20
# 30
# 30
# 30
# 10
# 30
# 10
# 10
# 30
# 10
# 20
# 30
# 40
# 10
# 40
# 30
# 30
# 40
# 20
# 10
# 40
# 20
# 30
# 20
# 40
# 40
# 10
# 30
# 10
# 30
# 30
# 40
# 10
# 30
# 20
# 10
# 30
# 20
# 40
# 10
# 40
# 20
# 10
# 10
# 40
# 30
# 20
# 30
# 20
# 10
# 20
# 30
# 30
# 20
# 10
# 30
# 30
# 20
# 40
# 20
# 20
# 40
# 10
# 40
# 30
# 10
# 10
# 10
# 40
# 40
# 30
# 40
# 40
# 40
# 30
# 30
# 30
# 10
# 30
# 20
# 40
# 40
# 10
# 30
# 30
# 30
# 40
# 20
# 20
# 20
# 40
# 40
# 30
# 20
# 10
# 30
# 20
# 40
# 20
# 40
# 30
# 10
# 20
# 10
# 20
# 30
# 10
# 30
# 40
# 30
# 40
# 10
# 20
# 10
# 30
# 40
# 20
# 20
# 10
# 40
# 20
# 10
# 30
# 30
# 20
# 30
# 10
# 40
# 40
# 40
# 20
# 20
# 20
# 10
# 10
# 30
# 30
# 20
# 30
# 30
# 40
# 40
# 40
# 20
# 20
# 40
# 40
# 10
# 30
# 10
# 20
# 20
# 10
# 30
# 30
# 20
# 10
# 30
# 10
# 30
# 10
# 30
# 20
# 30
# 30
# 20
# 20
# 20
# 30
# 30
# 40
# 20
# 30
# 40
# 30
# 30
# 10
# 40
# 20
# 30
# 10
# 10
# 20
# 20
# 10
# 10
# 10
# 40
# 10
# 40
# 20
# 40
# 30
# 10
# 10
# 10
# 30
# 40
# 20
# 20
# 30
# 30
# 10
# 10
# 40
# 30
# 10
# 30
# 40
# 30
# 40
# 30
# 10
# 10
# 10
# 10
# 40
# 20
# 20
# 10
# 10
# 20
# 10
# 30
# 20
# 10
# 20
# 20
# 10
# 20
# 30
# 10
# 10
# 10
# 30
# 40
# 10
# 30
# 20
# 40
# 30
# 10
# 10
# 40
# 30
# 20
# 10
# 30
# 10
# 10
# 20
# 20
# 10
# 20
# 30
# 10
# 20
# 20
# 30
# 40
# 40
# 40
# 30
# 30
# 40
# 20
# 30
# 10
# 10
# 30
# 30
# 40
# 10
# 10
# 30
# 30
# 40
# 40
# 40
# 30
# 10
# 20
# 20
# 30
# 40
# 20
# 20
# 40
# 40
# 40
# 40
# 40
# 40
# 40
# 20
# 20
# 10
# 10
# 30
# 20
# 40
# 40
# 10
# 30
# 40
# 20
# 20
# 40
# 40
# 10
# 10
# 10
# 40
# 40
# 40
# 30
# 30
# 30
# 30
# 10
# 10
# 30
# 30
# 30
# 30
# 30
# 30
# 10
# 20
# 40
# 40
# 20
# 30
# 30
# 10
# 40
# 30
# 30
# 10
# 40
# 40
# 40
# 30
# 20
# 30
# 10
# 20
# 20
# 30
# 30
# 20
# 20
# 20
# 20
# 40
# 30
# 30
# 10
# 10
# 10
# 30
# 30
# 10
# 40
# 20
# 30
# 10
# 30
# 30
# 20
# 30
# 20
# 20
# 20
# 10
# 20
# 30
# 40
# 30
# 40
# 40
# 10
# 30
# 10
# 40
# 40
# 20
# 10
# 30
# 40
# 40
# 40
# 20
# 40
# 30
# 20
# 20
# 10
# 10
# 10
# 10
# 10
# 40
# 30
# 20
# 40
# 10
# 30
# 10
# 10
# 30
# 20
# 20
# 40
# 20
# 20
# 10
# 10
# 10
# 10
# 20
# 10
# 10
# 30
# 40
# 40
# 10
# 40
# 10
# 10
# 10
# 20
# 30
# 40
# 40
# 20
# 10
# 10
# 20
# 40
# 30
# 10
# 10
# 40
# 20
# 20
# 10
# 30
# 30
# 10
# 20
# 40
# 30
# 20
# 10
# 30
# 40
# 30
# 40
# 40
# 40
# 20
# 20
# 20
# 30
# 30
# 40
# 30
# 40
# 10
# 10
# 40
# 10
# 40
# 30
# 30
# 30
# 40
# 20
# 10
# 10
# 40
# 40
# 10
# 10
# 30
# 40
# 20
# 20
# 20
# 40
# 10
# 20
# 40
# 40
# 20
# 40
# 20
# 40
# 40
# 10
# 30
# 40
# 30
# 30
# 30
# 20
# 40
# 30
# 30
# 20
# 30
# 40
# 40
# 40
# 20
# 30
# 30
# 10
# 20
# 20
# 20
# 20
# 10
# 40
# 20
# 10
# 30
# 20
# 40
# 10
# 20
# 20
# 20
# 40
# 20
# 30
# 10
# 20
# 30
# 40
# 40
# 30
# 20
# 30
# 30
# 20
# 30
# 10
# 30
# 20
# 20
# 40
# 40
# 30
# 40
# 40
# 10
# 40
# 40
# 30
# 40
# 30
# 30
# 20
# 20
# 30
# 10
# 20
# 20
# 10
# 40
# 10
# 40
# 40
# 40
# 40
# 40
# 40
# 40
# 20
# 20
# 20
# 30
# 10
# 10
# 20
# 30
# 20
# 30
# 10
# 10
# 40
# 30
# 30
# 30
# 30
# 30
# 40
# 10
# 30
# 30
# 40
# 10
# 40
# 20
# 30
# 30
# 40
# 40
# 10
# 30
# 30
# 40
# 10
# 20
# 10
# 30
# 20
# 40
# 20
# 20
# 10
# 30
# 30
# 30
# 30
# 40
# 20
# 20
# 10
# 40
# 40
# 30
# 30
# 40
# 10
# 30
# 40
# 30
# 40
# 40
# 10
# 20
# 20
# 40
# 40
# 10
# 40
# 20
# 30
# 30
# 40
# 10
# 30
# 20
# 30
# 30
# 20
# 40
# 30
# 10
# 30
# 10
# 30
# 30
# 20
# 30
# 20
# 30
# 20
# 30
# 30
# 10
# 10
# 10
# 20
# 30
# 20
# 20
# 30
# 40
# 40
# 30
# 30
# 20
# 10
# 20
# 10
# 30
# 10
# 10
# 20
# 40
# 40
# 30
# 20
# 40
# 10
# 40
# 30
# 20
# 40
# 40
# 40
# 20
# 40
# 40
# 10
# 20
# 40
# 30
# 10
# 10
# 20
# 30
# 30
# 20
# 40
# 20
# 20
# 10
# 40
# 10
# 20
# 20
# 20
# 10
# 20
# 40
# 40
# 20
# 40
# 20
# 20
# 10
# 20
# 40
# 10
# 30
# 40
# 20
# 30
# 10
# 30
# 10
# 40
# 40
# 10
# 20
# 30
# 10
# 10
# 30
# 10
# 40
# 10
# 20
# 30
# 30
# 40
# 20
# 10
# 10
# 20
# 30
# 40
# 20
# 10
# 20
# 20
# 10
# 30
# 10
# 20
# 20
# 20
# 40
# 40
# 30
# 20
# 30
# 10
# 30
# 30
# 10
# 20
# 40
# 9
# 10
# 9
# 8
# 8
# 9
# 10
# 10
# 10
# 9
# 8
# 10
# 9
# 10
# 10
# 8
# 8
# 10
# 9
# 9
# 9
# 9
# 10
# 10
# 10
# 8
# 9
# 9
# 7
# 10
# 9
# 9
# 10
# 10
# 6
# 10
# 10
# 9
# 9
# 10
# 7
# 10
# 9
# 9
# 8
# 9
# 10
# 10
# 5
# 9
# 10
# 10
# 9
# 10
# 9
# 10
# 10
# 10
# 9
# 7
# 10
# 8
# 10
# 10
# 9
# 9
# 8
# 9
# 10
# 9
# 10
# 9
# 9
# 10
# 10
# 7
# 9
# 9
# 9
# 8
# 10
# 10
# 10
# 10
# 7
# 9
# 10
# 9
# 10
# 9
# 10
# 9
# 9
# 9
# 7
# 10
# 10
# 9
# 9
# 10
# 10
# 9
# 9
# 9
# 10
# 9
# 10
# 10
# 9
# 9
# 9
# 10
# 10
# 9
# 9
# 10
# 10
# 9
# 9
# 8
# 9
# 9
# 10
# 10
# 9
# 10
# 10
# 7
# 10
# 10
# 9
# 9
# 9
# 10
# 10
# 9
# 10
# 7
# 10
# 8
# 8
# 9
# 8
# 7
# 9
# 8
# 9
# 9
# 9
# 8
# 9
# 9
# 9
# 10
# 10
# 9
# 9
# 7
# 6
# 9
# 10
# 8
# 10
# 9
# 10
# 9
# 10
# 9
# 9
# 5
# 6
# 10
# 6
# 9
# 10
# 7
# 9
# 10
# 10
# 9
# 10
# 10
# 9
# 8
# 10
# 7
# 7
# 10
# 9
# 7
# 10
# 7
# 10
# 9
# 8
# 10
# 7
# 9
# 10
# 8
# 10
# 5
# 9
# 10
# 10
# 10
# 8
# 10
# 7
# 9
# 8
# 10
# 9
# 10
# 7
# 10
# 10
# 9
# 9
# 9
# 7
# 10
# 10
# 9
# 10
# 10
# 9
# 10
# 10
# 9
# 10
# 10
# 10
# 10
# 8
# 9
# 9
# 7
# 10
# 6
# 10
# 9
# 9
# 9
# 10
# 9
# 9
# 10
# 9
# 10
# 6
# 7
# 7
# 10
# 10
# 9
# 9
# 9
# 10
# 9
# 9
# 10
# 9
# 7
# 9
# 10
# 9
# 10
# 9
# 10
# 7
# 7
# 10
# 10
# 10
# 7
# 10
# 9
# 8
# 10
# 9
# 10
# 7
# 9
# 10
# 10
# 9
# 10
# 9
# 10
# 9
# 9
# 9
# 8
# 9
# 9
# 9
# 9
# 8
# 9
# 10
# 9
# 9
# 9
# 9
# 10
# 9
# 10
# 8
# 10
# 9
# 10
# 9
# 10
# 9
# 9
# 9
# 9
# 10
# 9
# 10
# 10
# 10
# 10
# 9
# 10
# 8
# 10
# 9
# 7
# 7
# 10
# 9
# 10
# 9
# 9
# 8
# 9
# 9
# 10
# 8
# 9
# 10
# 9
# 9
# 9
# 10
# 9
# 10
# 10
# 9
# 8
# 10
# 10
# 8
# 7
# 10
# 10
# 9
# 10
# 10
# 10
# 9
# 9
# 9
# 10
# 10
# 9
# 10
# 10
# 9
# 10
# 10
# 9
# 9
# 6
# 9
# 9
# 10
# 10
# 10
# 10
# 9
# 7
# 9
# 10
# 8
# 10
# 10
# 9
# 9
# 8
# 10
# 6
# 9
# 9
# 6
# 10
# 9
# 10
# 10
# 10
# 7
# 8
# 9
# 10
# 9
# 9
# 10
# 10
# 10
# 9
# 6
# 10
# 10
# 7
# 9
# 9
# 10
# 10
# 9
# 9
# 9
# 10
# 9
# 10
# 9
# 9
# 10
# 9
# 9
# 9
# 9
# 9
# 9
# 9
# 10
# 8
# 9
# 10
# 9
# 9
# 9
# 10
# 10
# 9
# 10
# 9
# 7
# 9
# 8
# 9
# 10
# 6
# 9
# 9
# 10
# 10
# 10
# 10
# 8
# 9
# 9
# 10
# 10
# 9
# 10
# 8
# 7
# 10
# 9
# 10
# 10
# 9
# 9
# 9
# 10
# 9
# 10
# 9
# 7
# 10
# 9
# 9
# 9
# 10
# 9
# 9
# 6
# 9
# 7
# 8
# 9
# 10
# 9
# 9
# 10
# 9
# 7
# 9
# 9
# 9
# 9
# 10
# 10
# 10
# 10
# 9
# 9
# 7
# 9
# 10
# 10
# 10
# 10
# 9
# 9
# 9
# 7
# 8
# 9
# 10
# 10
# 9
# 9
# 7
# 10
# 9
# 9
# 9
# 10
# 10
# 10
# 9
# 10
# 10
# 10
# 10
# 9
# 9
# 9
# 9
# 9
# 10
# 7
# 9
# 9
# 10
# 9
# 9
# 10
# 8
# 9
# 9
# 9
# 10
# 10
# 10
# 9
# 9
# 10
# 10
# 9
# 6
# 10
# 10
# 10
# 10
# 10
# 10
# 8
# 9
# 10
# 9
# 10
# 5
# 10
# 9
# 9
# 9
# 9
# 9
# 9
# 9
# 9
# 10
# 10
# 9
# 9
# 10
# 10
# 7
# 9
# 7
# 10
# 10
# 9
# 9
# 8
# 9
# 10
# 9
# 6
# 10
# 10
# 10
# 9
# 9
# 9
# 9
# 10
# 8
# 9
# 9
# 10
# 9
# 9
# 7
# 10
# 9
# 9
# 10
# 9
# 9
# 10
# 10
# 10
# 10
# 9
# 5
# 9
# 10
# 10
# 7
# 10
# 10
# 5
# 9
# 9
# 10
# 7
# 9
# 10
# 9
# 10
# 10
# 10
# 9
# 10
# 7
# 10
# 10
# 10
# 10
# 9
# 10
# 10
# 9
# 10
# 10
# 10
# 10
# 10
# 9
# 9
# 10
# 8
# 9
# 9
# 10
# 10
# 10
# 10
# 9
# 10
# 6
# 9
# 10
# 9
# 9
# 7
# 9
# 6
# 6
# 10
# 10
# 10
# 8
# 10
# 9
# 5
# 9
# 9
# 8
# 10
# 10
# 8
# 9
# 10
# 10
# 9
# 9
# 10
# 10
# 8
# 10
# 9
# 8
# 10
# 9
# 9
# 6
# 8
# 9
# 9
# 9
# 10
# 10
# 8
# 9
# 10
# 9
# 9
# 10
# 10
# 10
# 10
# 6
# 9
# 9
# 9
# 10
# 9
# 9
# 10
# 8
# 9
# 9
# 10
# 10
# 9
# 8
# 9
# 10
# 9
# 10
# 9
# 9
# 9
# 9
# 9
# 9
# 6
# 9
# 8
# 5
# 9
# 8
# 9
# 10
# 5
# 9
# 10
# 9
# 8
# 9
# 5
# 10
# 7
# 10
# 8
# 10
# 7
# 10
# 10
# 7
# 9
# 9
# 10
# 10
# 7
# 10
# 9
# 10
# 9
# 9
# 7
# 10
# 7
# 9
# 9
# 10
# 8
# 10
# 7
# 9
# 6
# 9
# 7
# 9
# 10
# 10
# 10
# 7
# 10
# 10
# 9
# 5
# 9
# 8
# 10
# 7
# 10
# 10
# 10
# 10
# 10
# 8
# 10
# 10
# 9
# 10
# 10
# 10
# 10
# 9
# 10
# 9
# 9
# 10
# 10
# 6
# 9
# 9
# 9
# 9
# 9
# 10
# 8
# 10
# 9
# 9
# 9
# 10
# 9
# 9
# 9
# 10
# 9
# 10
# 10
# 10
# 9
# 9
# 9
# 9
# 9
# 9
# 10
# 10
# 9
# 10
# 10
# 9
# 10
# 7
# 7
# 6
# 5
# 10
# 9
# 10
# 9
# 10
# 9
# 10
# 7
# 9
# 10
# 8
# 9
# 10
# 10
# 10
# 10
# 10
# 9
# 10
# 9
# 10
# 10
# 7
# 10
# 9
# 9
# 10
# 10
# 9
# 9
# 10
# 9
# 10
# 8
# 10
# 6
# 10
# 9
# 10
# 10
# 9
# 10
# 9
# 10
# 9
# 10
# 10
# 10
# 10
# 10
# 9
# 10
# 10
# 6
# 9
# 10
# 10
# 9
# 10
# 10
# 10
# 9
# 9
# 8
# 7
# 10
# 10
# 7
# 8
# 9
# 10
# 10
# 9
# 9
# 8
# 8
# 10
# 8
# 9
# 9
# 10
# 10
# 10
# 9
# 10
# 10
# 9
# 6
# 10
# 10
# 10
# 10
# 9
# 9
# 9
# 9
# 10
# 10
# 9
# 10
# 9
# 10
# 10
# 10
# 10
# 10
# 7
# 10
# 10
# 9
# 9
# 10
# 10
# 10
# 10
# 8
# 9
# 9
# 10
# 10
# 9
# 9
# 10
# 8
# 10
# 8
# 9
# 9
# 9
# 8
# 7
# 9
# 9
# 10
# 9
# 9
# 9
# 10
# 10
# 9
# 10
# 9
# 9
# 10
# 8
# 10
# 10
# 9
# 9
# 10
# 10
# 5
# 9
# 9
# 7
# 9
# 9
# 7
# 5
# 10
# 9
# 9
# 10
# 9
# 10
# 9
# 9
# 9
# 10
# 10
# 10
# 9
# 9
# 10
# 10
# 10
# 9
# 9
# 10
# 9
# 9
# 9
# 8
# 7
# 6
# 10
# 9
# 9
# 10
# 10
# 9
# 10
# 9
# 9
# 10
# 9
# 7
# 9
# 8
# 10
# 9
# 9
# 10
# 10
# 9
# 10
# 9
# 10
# 10
# 8
# 10
# 9
# 9
# 10
# 8
# 10
# 10
# 9
# 10
# 10
# 10
# 10
# 10
# 10
# 9
# 10
# 9
# 9
# 10
# 10
# 10
# 10
# 9
# 8
# 10
# 7
# 10
# 9
# 9
# 10
# 9
# 9
# 9
# 7
# 9
# 8
# 10
# 10
# 9
# 10
# 8
# 6
# 10
# 9
# 9
# 6
# 9
# 10
# 9
# 9
# 10
# 10
# 9
# 9
# 10
# 9
# 10
# 9
# 9
# 9
# 9
# 8
# 10
# 10
# 10
# 10
# 10
# 10
# 9
# 5
# 10
# 9
# 9
# 9
# 10
# 9
# 10
# 9
# 9
# 9
# 9
# 10
# 7
# 8
# 9
# 7
# 10
# 9
# 9
# 9
# 9
# 9
# 10
# 5
# 10
# 8
# 9
# 9
# 7
# 10
# 10
# 9
# 9
# 9
# 9
# 7
# 9
# 9
# 10
# 10
# 10
# 9
# 7
# 7
# 9
# 10
# 9
# 10
# 9
# 5
# 9
# 10
# 10
# 5
# 8
# 8
# 8
# 10
# 10
# 10
# 10
# 10
# 9
# 7
# 10
# 5
# 9
# 9
# 9
# 10
# 10
# 5
# 9
# 9
# 10
# 10
# 10
# 9
# 9
# 9
# 5
# 9
# 6
# 9
# 10
# 10
# 9
# 9
# 10
# 10
# 10
# 9
# 9
# 5
# 10
# 9
# 8
# 9
# 9
# 9
# 10
# 10
# 9
# 6
# 10
# 9
# 10
# 9
# 10
# 9
# 10
# 9
# 10
# 9
# 10
# 9
# 10
# 9
# 10
# 10
# 10
# 10
# 8
# 10
# 9
# 10
# 8
# 10
# 10
# 5
# 9
# 8
# 7
# 9
# 10
# 10
# 10
# 9
# 9
# 7
# 9
# 10
# 5
# 6
# 7
# 10
# 5
# 10
# 6
# 10
# 10
# 10
# 9
# 7
# 10
# 10
# 9
# 9
# 10
# 10
# 8
# 10
# 10
# 7
# 7
# 9
# 10
# 6
# 9
# 10
# 7
# 10
# 10
# 10
# 8
# 10
# 6
# 8
# 9
# 9
# 9
# 9
# 9
# 10
# 8
# 10
# 10
# 10
# 7
# 10
# 10
# 9
# 10
# 9
# 9
# 10
# 9
# 10
# 9
# 10
# 9
# 9
# 10
# 9
# 9
# 9
# 9
# 10
# 8
# 9
# 7
# 6
# 10
# 7
# 7
# 10
# 7
# 9
# 9
# 10
# 7
# 6
# 10
# 9
# 9
# 10
# 10
# 7
# 9
# 10
# 10
# 10
# 8
# 10
# 8
# 9
# 7
# 9
# 10
# 9
# 8
# 9
# 9
# 9
# 9
# 9
# 9
# 5
# 10
# 10
# 10
# 9
# 10
# 8
# 7
# 10
# 10
# 9
# 7
# 10
# 5
# 10
# 9
# 9
# 10
# 6
# 10
# 10
# 10
# 9
# 8
# 7
# 10
# 10
# 8
# 9
# 10
# 9
# 10
# 9
# 10
# 10
# 7
# 9
# 9
# 6
# 10
# 10
# 9
# 9
# 9
# 10
# 9
# 8
# 7
# 9
# 9
# 9
# 10
# 10
# 9
# 9
# 8
# 10
# 10
# 10
# 9
# 7
# 10
# 9
# 10
# 8
# 8
# 9
# 10
# 10
# 10
# 10
# 9
# 10
# 9
# 9
# 7
# 10
# 10
# 10
# 6
# 8
# 8
# 9
# 9
# 9
# 9
# 8
# 9
# 9
# 7
# 10
# 8
# 9
# 10
# 9
# 9
# 10
# 10
# 5
# 10
# 8
# 9
# 9
# 9
# 10
# 10
# 9
# 9
# 9
# 7
# 5
# 10
# 10
# 5
# 8
# 9
# 9
# 9
# 10
# 9
# 9
# 9
# 10
# 9
# 9
# 10
# 10
# 10
# 7
# 8
# 10
# 10
# 9
# 5
# 10
# 10
# 7
# 8
# 9
# 10
# 7
# 10
# 10
# 10
# 9
# 9
# 10
# 8
# 10
# 10
# 9
# 8
# 10
# 10
# 9
# 9
# 10
# 10
# 9
# 9
# 9
# 9
# 8
# 10
# 9
# 9
# 9
# 10
# 8
# 8
# 10
# 10
# 10
# 9
# 9
# 9
# 5
# 10
# 9
# 8
# 10
# 9
# 9
# 9
# 9
# 10
# 9
# 9
# 9
# 9
# 9
# 9
# 9
# 10
# 9
# 10
# 7
# 9
# 10
# 10
# 9
# 9
# 9
# 9
# 9
# 9
# 8
# 8
# 9
# 10
# 6
# 7
# 8
# 10
# 10
# 10
# 8
# 9
# 7
# 9
# 10
# 7
# 10
# 7
# 9
# 7
# 10
# 9
# 7
# 9
# 10
# 9
# 10
# 9
# 6
# 9
# 10
# 9
# 10
# 5
# 10
# 7
# 9
# 7
# 9
# 8
# 10
# 8
# 9
# 9
# 10
# 9
# 10
# 10
# 8
# 9
# 7
# 10
# 10
# 10
# 8
# 10
# 10
# 9
# 9
# 10
# 10
# 10
# 10
# 7
# 10
# 8
# 10
# 9
# 8
# 9
# 9
# 10
# 10
# 7
# 9
# 9
# 9
# 6
# 7
# 10
# 6
# 7
# 10
# 10
# 9
# 7
# 10
# 5
# 10
# 10
# 9
# 10
# 9
# 8
# 10
# 10
# 10
# 7
# 5
# 10
# 8
# 9
# 8
# 10
# 10
# 8
# 9
# 9
# 9
# 10
# 9
# 9
# 8
# 10
# 9
# 10
# 9
# 10
# 9
# 6
# 10
# 9
# 9
# 9
# 9
# 10
# 8
# 7
# 9
# 5
# 10
# 9
# 10
# 10
# 9
# 10
# 9
# 10
# 5
# 10
# 9
# 9
# 9
# 9
# 9
# 9
# 10
# 10
# 9
# 10
# 10
# 9
# 9
# 9
# 9
# 9
# 7
# 10
# 10
# 7
# 9
# 9
# 9
# 10
# 10
# 10
# 9
# 8
# 9
# 10
# 9
# 9
# 9
# 9
# 10
# 7
# 10
# 8
# 10
# 8
# 9
# 10
# 10
# 9
# 10
# 8
# 10
# 9
# 6
# 10
# 10
# 9
# 10
# 9
# 7
# 10
# 9
# 9
# 10
# 9
# 10
# 9
# 8
# 10
# 10
# 10
# 10
# 10
# 9
# 7
# 9
# 7
# 10
# 10
# 10
# 9
# 9
# 10
# 9
# 9
# 8
# 9
# 9
# 10
# 9
# 10
# 9
# 9
# 9
# 9
# 10
# 10
# 9
# 10
# 9
# 9
# 9
# 10
# 7
# 10
# 10
# 9
# 9
# 9
# 9
# 10
# 10
# 5
# 10
# 9
# 10
# 9
# 7
# 10
# 10
# 10
# 9
# 10
# 9
# 9
# 10
# 10
# 10
# 9
# 9
# 9
# 10
# 5
# 10
# 10
# 10
# 9
# 8
# 9
# 9
# 9
# 6
# 9
# 8
# 9
# 10
# 9
# 9
# 10
# 8
# 9
# 10
# 10
# 7
# 9
# 7
# 9
# 8
# 8
# 9
# 7
# 9
# 9
# 9
# 9
# 9
# 10
# 8
# 10
# 9
# 9
# 10
# 10
# 7
# 6
# 10
# 10
# 10
# 10
# 8
# 7
# 10
# 9
# 9
# 10
# 10
# 5
# 8
# 10
# 9
# 10
# 9
# 7
# 7
# 9
# 9
# 9
# 10
# 9
# 9
# 9
# 10
# 7
# 9
# 10
# 9
# 9
# 9
# 9
# 10
# 8
# 10
# 10
# 9
# 10
# 9
# 8
# 7
# 10
# 9
# 9
# 7
# 10
# 8
# 9
# 9
# 9
# 9
# 7
# 10
# 10
# 9
# 9
# 8
# 10
# 10
# 9
# 9
# 10
# 10
# 10
# 10
# 10
# 10
# 9
# 9
# 8
# 9
# 7
# 9
# 10
# 10
# 10
# 9
# 9
# 9
# 9
# 9
# 9
# 9
# 9
# 10
# 9
# 
# Test SCAN value generation mode
# This has not been implemented yet
# -2147483648
# -2147483647
# -2147483646
# -2147483645
# -2147483644
# -2147483643
# -2147483642
# -2147483641
# -2147483640
# -2147483639
# 
# Test RANDOM_AVOID_DUPLICATE_MODE
# Tests this mode setting for constraint classes
# 
# Print 3 set of 5 values [1,5]
# Each set of values should not have repetition
# 1
# 3
# 2
# 5
# 4
# 
# 2
# 4
# 5
# 3
# 1
# 
# 5
# 3
# 4
# 2
# 1
# 
# 
# Print 3 set of 10 values a>b && a[1,5] && b[1,5]
# Each set of values should not have repetition
# 5  2
# 4  2
# 5  4
# 4  1
# 4  3
# 5  1
# 2  1
# 3  2
# 5  3
# 3  1
# 
# 2  1
# 5  3
# 3  2
# 5  1
# 5  4
# 4  2
# 5  2
# 3  1
# 4  1
# 4  3
# 
# 4  2
# 3  1
# 4  1
# 4  3
# 5  2
# 2  1
# 5  3
# 5  1
# 3  2
# 5  4
# 
# Obtain 10 values between [5,10] using disable_randomization()
# 9
# 7
# 5
# 5
# 8
# 6
# 10
# 7
# 9
# 6
# Obtain 10 values between [15,20] using disable_randomization()
# 17
# 17
# 18
# 20
# 18
# 18
# 18
# 17
# 15
# 18
# 
# Print 10 unconstrained values using enable_randomization() and next() on individual elements of dependent streams
# -1131006314 : -1131006314
# -728344165 : -728344165
# -917582350 : -917582350
# -2052723197 : -2052723197
# -156689417 : -156689417
# 1621609934 : 1621609934
# 1898171576 : 1898171576
# 1963038432 : 1963038432
# 1673176906 : 1673176906
# -380867379 : -380867379
# 
# Print unconstrained values for composite type and constrainted for last element 
# 1013760701
# 2084849908
# 1892005612
# 1804139044
# 63
# 
# Print 10 values where composite element is not being randomized()
# 1013760701
# 2084849908
# 1892005612
# 1804139044
# 57
# 1013760701
# 2084849908
# 1892005612
# 1804139044
# 38
# 1013760701
# 2084849908
# 1892005612
# 1804139044
# 45
# 1013760701
# 2084849908
# 1892005612
# 1804139044
# 66
# 1013760701
# 2084849908
# 1892005612
# 1804139044
# 50
# 1013760701
# 2084849908
# 1892005612
# 1804139044
# 82
# 1013760701
# 2084849908
# 1892005612
# 1804139044
# 60
# 1013760701
# 2084849908
# 1892005612
# 1804139044
# 60
# 1013760701
# 2084849908
# 1892005612
# 1804139044
# 24
# 1013760701
# 2084849908
# 1892005612
# 1804139044
# 32
# Print 10 values where composite element is NOW BEING randomized with enable_randomization()
# 
# -438218176
# -1612910665
# -1506981090
# 1646644613
# 72
# 250318942
# -542592724
# 1818310687
# 1926421902
# 4
# 1222035573
# -1405680639
# -1260869011
# -710400747
# 41
# -1823432905
# 549689634
# -979990395
# 436203767
# 88
# -1307439020
# 1242175838
# -1461548612
# -432533412
# 83
# -634514568
# 1105566026
# -1065589170
# 1277117759
# 38
# 695278712
# 404285285
# 441021623
# -1280657107
# 82
# 960228039
# -959768452
# -1817294783
# -184059316
# 25
# -1510515666
# 1142290000
# -2117393186
# -371702626
# 76
# -337234244
# -944098187
# -1058317257
# 867179399
# 80
# Print 10 values on existing smart_ptr using enable_randomization() with CONSTRAINT (a == b)
# -1961792234 : -1961792234
# -1961792234 : -1961792234
# -1961792234 : -1961792234
# -1961792234 : -1961792234
# -1961792234 : -1961792234
# -1961792234 : -1961792234
# -1961792234 : -1961792234
# -1961792234 : -1961792234
# -1961792234 : -1961792234
# -1961792234 : -1961792234
# 
# 
# TEST COMPLEX CONSTRAINT USE MODEL
#   -COMPOSITE DATA TYPE
#   -INHERITANCE BASED CONSTRAINTS 
# Obtain value using next on class object
#   - (packet.src + packet.dest == 10) 
# packet : 
# -977702166
# 7
# 3
# 1702456954
# end_packet
# 
# Obtain value using next on smart_ptr and use_constraint
#   - (packet.src + packet.dest == 10) 
# 2 set of values satisfying packet_constraint
# packet : 
# -1015986741
# 6
# 4
# 1311800098
# end_packet
# 
# packet : 
# -1361474878
# 2
# 8
# 1432052135
# end_packet
# 
# Obtain value using next on smart_ptr and use_constraint
# 1 set of values satisfying packet_src_constraint
#   - ( packet->src() != (*index)() )
# packet : 
# -1940084539
# -1167270090
# 768152540
# 499617963
# end_packet
# 
# Obtain value using next on smart_ptr and use_constraint
#   constraint_a - ( packet->src() != packet->dest() )
#   constraint_ab - ( packet->src() + packet->dest() == 10 )
#   constraint_ac - ( packet->payload() != 0 )
#   constraint_abc - ( packet->src() < 2 )
# 1 set of values satisfying constraint_ab
# packet : 
# 454959304
# 6
# 4
# -1007955805
# end_packet
# 
# Obtain value using next on smart_ptr and use_constraint
# 1 set of values satisfying constraint_ac
# packet : 
# -790762421
# 610665638
# -551967369
# -1943405094
# end_packet
# 
# Obtain value using next on smart_ptr and use_constraint
# 1 set of values satisfying constraint_abc
# packet : 
# 1159265591
# 0
# 10
# -1465360644
# end_packet
# 
# Obtain value using next on smart_ptr and use_constraint
# 1 set of values satisfying constraint_abc
# packet : 
# 1596197103
# 0
# 10
# 2121888304
# end_packet
# 
# Obtain value's along with disable_randomization 
# packet : 
# 0
# 3
# -2043119402
# 2033128615
# end_packet
# 
# packet : 
# 0
# 3
# 1440086262
# -1136843713
# end_packet
# 
# packet : 
# 0
# 3
# 1486167420
# -1036381633
# end_packet
# 
# packet : 
# 0
# 3
# 111056804
# 1448516826
# end_packet
# 
# packet : 
# 0
# 3
# 170140211
# -831670686
# end_packet
# 
# Check constraint on 2 record elements in a constraint
# 0 0 0 0
# 0 0 0 0
# 2 1 1 1 2
# 
# 1 1 1 2 1
# 2 1 2 2 1
# 1 1 2 2 1
# 1 1 1 1 1
# 1 2 1 1 2
# 2 1 2 2 2
# 1 2 2 1 1
# 2 1 1 2 1
# 2 2 2 2 2
# 1 1 2 2 2
# 1 1 2 1 2
# 2 2 1 1 1
# 2 2 2 1 1
# 2 1 1 1 2
# 1 1 1 2 2
# 1 2 1 1 1
# 1 2 2 2 2
# 1 1 1 1 2
# 2 2 2 1 2
# 2 2 2 2 1
# 1 1 2 1 1
# 2 1 2 1 1
# 1 2 2 2 1
# 2 2 1 2 2
# 1 2 1 2 1
# 2 1 2 1 2
# 1 2 2 1 2
# 1 2 1 2 2
# 2 1 1 1 1
# 2 1 1 2 2
# 2 2 1 1 2
# 2 2 1 2 1
# 
# 
# 1 2 2 2 1
# 2 1 1 2 2
# 2 1 2 1 1
# 1 2 2 1 2
# 1 1 1 2 2
# 1 2 1 1 1
# 1 1 2 1 1
# 2 2 1 2 1
# 2 1 1 1 2
# 1 2 1 1 2
# 2 2 1 2 2
# 2 1 1 2 1
# 2 1 2 2 2
# 2 1 1 1 1
# 1 1 1 1 1
# 1 2 2 1 1
# 2 2 1 1 1
# 1 2 1 2 2
# 1 1 1 2 1
# 2 1 2 1 2
# 1 2 1 2 1
# 2 1 2 2 1
# 1 1 2 2 2
# 1 2 2 2 2
# 1 1 1 1 2
# 1 1 2 1 2
# 2 2 1 1 2
# 2 2 2 2 2
# 2 2 2 1 1
# 2 2 2 1 2
# 2 2 2 2 1
# 1 1 2 2 1
# 
# 
# TEST OVER CONSTRAINTED OBJECTS
# ************************START TEST *******************
# 
# Warning: CONSTRAINT_WARNING_IGNORE_SOFT_CONSTRAINT: Soft constraints for over-constrained  object 'c' will be ignored. 
# Ignore soft constraint a == b 
# Print a WARNING message about ignoring soft constraint
# Generate set of 10 values a[1,10]  b[20,30]
# 4  28
# 9  22
# 4  23
# 10  26
# 2  28
# 2  26
# 8  30
# 7  20
# 8  22
# 5  28
# ************************END TEST *******************
# 
# ************************START TEST *******************
# 
# Error: CONSTRAINT_ERROR_OVER_CONSTRAINED: Constraints for over-constrained object 'c' will be ignored.
# Print ERROR for not being able to satisfy hard constraint
# Print set of 10 unconstrained values 
# -827637925  1314271399
# 1617969510  -486881542
# -395488710  -1072486296
# 1337556823  1632480634
# -1558360156  -45257608
# 1232625822  1111205604
# 2020500653  2003520797
# -1168345965  1994775077
# 2054473213  145418620
# 443414844  1533020459
# 
# ************************END TEST *******************
# 
# ************************START TEST *******************
# 
# Should generate 10 values [5,10] && (a==b)
# 8  8
# 6  6
# 8  8
# 7  7
# 9  9
# 7  7
# 5  5
# 10  10
# 10  10
# 9  9
# 
# Ignore soft constraint a == b at runtime 
# Print a WARNING about ignoring soft constraint
# Second value on each line should be 12
# 9  12
# Warning: CONSTRAINT_WARNING_IGNORE_SOFT_CONSTRAINT: Soft constraints for over-constrained  object 'c' will be ignored. 
# 5  12
# 8  12
# 7  12
# 6  12
# 9  12
# 3  12
# 4  12
# 7  12
# 5  12
# 
# ************************END TEST *******************
# 
# 
# 
# TEST REPRODUCIBILITY
# 
# Test sharing scv_random between various different smart_ptr
# Following 25 values should always be the same for all runs
# The values will only change when underlying value generation algorithm changes
# 2047477032
# 1745270325
# -1946680906
# -573523700
# -1429552556
# 
# 327855088
# 1696918906
# 418158178
# 304061792
# -953476419
# 
# Check reproducibility for composite data type packet_t
# 2047477032
# 1745270325
# -1946680906
# -573523700
# 
# -1429552556
# 327855088
# 1696918906
# 418158178
# 
# 304061792
# -953476419
# 196249434
# -421515222
# 
# 1331785979
# -1681957285
# -1170152541
# 2050168009
# 
# 722671141
# 1443515846
# 1213234596
# -1205154389
# 
# Check reproducibility for constraint class
#   - First 4 elements unconstrained in the set of 5 values
#   - Last element s >= 1 && s <= 99
# 
# 1967978941
# 1135718190
# 1867674883
# 1575447043
# 68
# 283978928
# 1986136268
# -77507571
# 1739285164
# 55
# -415220062
# -87115163
# -286953814
# -1881657923
# 89
# 1787695401
# 838826107
# -579880179
# -12878294
# 19
# -1955910407
# 829666113
# 1163968433
# -1022638731
# 13
# Check reproducibility based on use_constraint use model
#   - Values between s >= 1 && s <= 99
# 
# 68
# 55
# 89
# 19
# 13
# 
# 
# TEST SystemC Types
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  74
#     :  1630157363934458146
#     :  1630157363934458146
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  16
#     :  8728460756334938171
#     :  8728460756334938171
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  21
#     :  4314522368330934610
#     :  4314522368330934610
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  91
#     :  674197705330857922
#     :  674197705330857922
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  80
#     :  12440135293148524886
#     :  12440135293148524886
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  43
#     :  5701084781228081117
#     :  5701084781228081117
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  13
#     :  12830664849031660187
#     :  12830664849031660187
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  70
#     :  12704539211201449503
#     :  12704539211201449503
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  72
#     :  5556669980051923555
#     :  5556669980051923555
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  66
#     :  4139322991212150885
#     :  4139322991212150885
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  32
#     :  6039908865318287806
#     :  6039908865318287806
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  62
#     :  14296107601165352083
#     :  14296107601165352083
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  30
#     :  10683438721964190750
#     :  10683438721964190750
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  64
#     :  4011668432209205910
#     :  4011668432209205910
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  33
#     :  17189453696979853245
#     :  17189453696979853245
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  98
#     :  654389540921957047
#     :  654389540921957047
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  76
#     :  5935811833098042852
#     :  5935811833098042852
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  83
#     :  5876101613828795049
#     :  5876101613828795049
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  56
#     :  15039596786723971260
#     :  15039596786723971260
# constraint_sc_types Name: c
#   Hard constraints: (((1&&((default>=5)&&(default<=100)))&&(default==default))&&1)
#   Soft constraints: (1&&1)
#   Number of elements: 3
#   Current value of elements: 
#     :  82
#     :  15636760174564034824
#     :  15636760174564034824
# %%TB_STATUS_SUCCESS: 
# %%TB_STATUS_INFO: Exiting tb_constraints
